# Generated by Django 5.0.10 on 2024-12-25 16:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accelerator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'accelerator',
            },
        ),
        migrations.CreateModel(
            name='ClientGenAIAdoptation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255, unique=True)),
                ('is_disabled', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client_genai_adoptation',
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'competition',
            },
        ),
        migrations.CreateModel(
            name='Microservice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'microservice',
            },
        ),
        migrations.CreateModel(
            name='ReasonForGenAIAdoptation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255, unique=True)),
                ('is_disabled', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reason_for_no_genai_adoption',
            },
        ),
        migrations.CreateModel(
            name='OppAccelerator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('accelerator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='modtest.accelerator')),
            ],
            options={
                'db_table': 'opp_accelerator',
            },
        ),
        migrations.CreateModel(
            name='OppCompetition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='modtest.competition')),
            ],
            options={
                'db_table': 'opp_competition',
            },
        ),
        migrations.CreateModel(
            name='OppMicroservice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('microservice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='modtest.microservice')),
            ],
            options={
                'db_table': 'opp_microservice',
            },
        ),
        migrations.CreateModel(
            name='OpportunityTracker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('op_id', models.IntegerField(unique=True)),
                ('op_name', models.CharField(max_length=255)),
                ('team_size', models.FloatField(blank=True, null=True)),
                ('client_name', models.CharField(max_length=255)),
                ('technology', models.CharField(blank=True, choices=[('AI', 'Artificial Intelligence'), ('ML', 'Machine Learning'), ('Blockchain', 'Blockchain'), ('Cloud', 'Cloud Computing')], max_length=50, null=True)),
                ('accelerators', models.ManyToManyField(through='modtest.OppAccelerator', to='modtest.accelerator')),
                ('client_genai_adoption', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='modtest.clientgenaiadoptation')),
                ('competitions', models.ManyToManyField(through='modtest.OppCompetition', to='modtest.competition')),
                ('microservices', models.ManyToManyField(through='modtest.OppMicroservice', to='modtest.microservice')),
                ('reason_for_genai_adoption', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='modtest.reasonforgenaiadoptation')),
            ],
            options={
                'db_table': 'opportunity_tracker',
            },
        ),
        migrations.AddField(
            model_name='oppmicroservice',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='modtest.opportunitytracker'),
        ),
        migrations.AddField(
            model_name='oppcompetition',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='modtest.opportunitytracker'),
        ),
        migrations.AddField(
            model_name='oppaccelerator',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='modtest.opportunitytracker'),
        ),
    ]
